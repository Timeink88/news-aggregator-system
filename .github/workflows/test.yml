name: 综合测试套件

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 设置Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: 安装依赖
      run: npm ci

    - name: 运行单元测试
      run: npm run test:unit
      env:
        NODE_ENV: test
        SUPABASE_URL: https://test.supabase.co
        SUPABASE_SERVICE_ROLE_KEY: test-key
        OPENAI_API_KEY: test-openai-key
        EMAIL_USER: test@email.com
        EMAIL_PASSWORD: test-password

    - name: 运行集成测试
      run: npm run test:integration
      env:
        NODE_ENV: test
        SUPABASE_URL: https://test.supabase.co
        SUPABASE_SERVICE_ROLE_KEY: test-key
        OPENAI_API_KEY: test-openai-key
        EMAIL_USER: test@email.com
        EMAIL_PASSWORD: test-password

    - name: 运行性能测试
      run: npm run test:performance
      env:
        NODE_ENV: test
        SUPABASE_URL: https://test.supabase.co
        SUPABASE_SERVICE_ROLE_KEY: test-key
        OPENAI_API_KEY: test-openai-key
        EMAIL_USER: test@email.com
        EMAIL_PASSWORD: test-password

    - name: 生成测试覆盖率报告
      run: npm run test:coverage
      env:
        NODE_ENV: test
        SUPABASE_URL: https://test.supabase.co
        SUPABASE_SERVICE_ROLE_KEY: test-key
        OPENAI_API_KEY: test-openai-key
        EMAIL_USER: test@email.com
        EMAIL_PASSWORD: test-password

    - name: 上传测试覆盖率
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: 上传测试报告
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-reports-${{ matrix.node-version }}
        path: |
          test/test-report.json
          test/test-report.html
          coverage/

  security:
    runs-on: ubuntu-latest
    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 设置Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: 安装依赖
      run: npm ci

    - name: 运行安全扫描
      run: npm audit --audit-level=moderate

    - name: 运行代码检查
      run: npm run lint:check

  performance-benchmark:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [test, security]

    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 设置Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: 安装依赖
      run: npm ci

    - name: 运行完整性能测试
      run: npm run test:all
      env:
        NODE_ENV: test
        SUPABASE_URL: https://test.supabase.co
        SUPABASE_SERVICE_ROLE_KEY: test-key
        OPENAI_API_KEY: test-openai-key
        EMAIL_USER: test@email.com
        EMAIL_PASSWORD: test-password

    - name: 上传性能报告
      uses: actions/upload-artifact@v3
      with:
        name: performance-report
        path: |
          test/test-report.json
          test/test-report.html